trigger:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macos-latest'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)
  
# Please use Node.js version greater than 18.0 for succussful CI test.
# TO: Multiple version CI testing
steps:

- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- bash: |
    /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    echo ">>> Started xvfb"
  displayName: Start xvfb
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

- bash: |
    echo ">>> Set up environment" 
    npm ci

- bash: |
    echo ">>> Compile checker-framework-vscode"
    npm run compile
    # Don't have the echo below, as it masks a failure from the npm commands.
    # echo ">>> Compiled checker-framework-vscode"
    #    cd sample
    #    echo ">>> Run sample integration test"
    #    TODO: add tests
    #    npm run compile
  displayName: Run Tests
  env:
    DISPLAY: ':99.0'

- bash: |
    echo ">>> Check for downloader release"
    npm run get-downloader-release
    if [ -f "checker-framework-languageserver-downloader.jar" ]; then
        echo "Download successful."
    else
        echo "Download failed." && exit 1
    fi
  displayName: Check for downloader release

- bash: |
    echo ">>> Check for vsce functionality"
    npm run vsce
  displayName: Check for vsce functionality